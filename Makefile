pwd = $(shell pwd)
pinentry = $(shell which pinentry-mac)

# if you're setting up a machine for the first time and not just re-running make on an existing one, you should do the
# following manual steps after running make:
#
# - gpg --gen-key
# - visit https://gist.github.com/bmhatfield/cc21ec0a3a2df963bffa3c1f884b676b and complete the first line of step 2 by
#   typing gpg1 --list-keys and copying the part after the slash for your key

.PHONY: all macos-setup dependencies programs dev gpg zsh ruby links init update pull fortune profile replace_session \
	npm add amethyst bashrc gitconfig gitignore_global gpg-agent irssi nvim oh-my-zsh vim vimrc zshrc

all:
	$(MAKE) macos
	$(MAKE) links
	$(MAKE) vim
	$(MAKE) fortune
	$(MAKE) profile
	$(MAKE) replace_session
	$(MAKE) npm
	$(MAKE) gpg

macos:
	ssh-add
	brew update
	brew upgrade
	$(MAKE) dependencies
	$(MAKE) programs
	$(MAKE) dev
	$(MAKE) ruby
	$(MAKE) zsh

dependencies:
	brew install python3 pinentry-mac gpg

programs:
	brew install ag ack ssh-copy-id neovim/neovim/neovim terraform jq
	brew cask install scroll-reverser

dev:
	git config --global user.name glacials
	git config --global user.email qhiiyr@gmail.com

gpg:
	brew install gnupg gnupg2 gpg-agent pinentry-mac gpg1 gpg2
	git config --global gpg.program gpg2
	git config --global commit.gpgsign true
	echo "use-agent" >> ~/.gnupg/gpg.conf
	echo "\
		# autogenerated by dotfiles Makefile -- change there, not here \n\
		require-cross-certification \n\
		keyserver hkps://hkps.pool.sks-keyservers.net \n\
		keyserver-options auto-key-retrieve \n\
		auto-key-locate hkps://hkps.pool.sks-keyservers.net \n\
		cert-digest-algo SHA512 \n\
		default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed \n\
		personal-digest-preferences SHA512 SHA384 SHA256 SHA224 \n\
		no-emit-version \n\
		keyserver-options no-honor-keyserver-url \n\
		use-agent \n\
		batch \
	" > ~/.gnupg/gpg.conf
	echo "pinentry-program $(pinentry)" > ~/.gnupg/gpg-agent.conf

zsh:
	chsh -s /bin/zsh `whoami`

ruby:
	brew install rbenv ruby-build

fortune:
	brew install fortune cowsay
	./fortunes/strfile

profile:
	touch ~/.profile

replace_session:
	zsh

npm:
	brew install npm
	npm install -g typescript

links:
	mkdir -p ~/.config
	mkdir -p ~/.ssh
	[ -h ~/.amethyst ]             && ln -fs $(pwd)/.amethyst             ~         || ln -is $(pwd)/.amethyst             ~
	[ -h ~/.bashrc ]               && ln -fs $(pwd)/.bashrc               ~         || ln -is $(pwd)/.bashrc               ~
	[ -h ~/.config/nvim ]          && ln -fs $(pwd)/.config/nvim          ~/.config || ln -is $(pwd)/.config/nvim          ~/.config
	[ -h ~/.gitconfig ]            && ln -fs $(pwd)/.gitconfig            ~         || ln -is $(pwd)/.gitconfig            ~
	[ -h ~/.gitignore_global ]     && ln -fs $(pwd)/.gitignore_global     ~         || ln -is $(pwd)/.gitignore_global     ~
	[ -h ~/.gnupg/gpg-agent.conf ] && ln -fs $(pwd)/.gnupg/gpg-agent.conf ~/.gnupg  || ln -is $(pwd)/.gnupg/gpg-agent.conf ~/.gnupg
	[ -h ~/.irssi ]                && ln -fs $(pwd)/.irssi                ~         || ln -is $(pwd)/.irssi                ~
	[ -h ~/.oh-my-zsh ]            && ln -fs $(pwd)/.oh-my-zsh            ~         || ln -is $(pwd)/.oh-my-zsh            ~
	[ -h ~/.ssh/config ]           && ln -fs $(pwd)/.ssh/config           ~/.ssh    || ln -is $(pwd)/.ssh/config           ~/.ssh
	[ -h ~/.vim ]                  && ln -fs $(pwd)/.vim                  ~         || ln -is $(pwd)/.vim                  ~
	[ -h ~/.vimrc ]                && ln -fs $(pwd)/.vimrc                ~         || ln -is $(pwd)/.vimrc                ~
	[ -h ~/.zshrc ]                && ln -fs $(pwd)/.zshrc                ~         || ln -is $(pwd)/.zshrc                ~
