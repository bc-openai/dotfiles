uname=$(uname -s | tr "[:upper:]" "[:lower:]")

ZSH_THEME="pygmalion"

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

# Zinit plugins
zinit light zdharma-continuum/fast-syntax-highlighting

# Zinit snippets
zi snippet OMZP::bundler
zi snippet OMZP::brew
zi snippet OMZP::common-aliases
zi snippet OMZP::dircycle
zi snippet OMZP::encode64
zi snippet OMZP::gem
zi snippet OMZP::rails
zi snippet OMZP::ruby
zi snippet OMZP::vi-mode

# zsh setup
autoload -Uz zmv
alias zcp="zmv -C"
alias zln="zmv -L"

path+=("$HOME/bin:$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin")

if [[ $uname == darwin  ]]; then
  path+=("/Applications/Tailscale.app/Contents/MacOS")
fi

# run history-substituted commands (e.g. containing `!!` or `!$`) without confirmation
unsetopt histverify

alias amend='git add -p && git commit --amend --no-edit && git push -f'
alias curl='curl --proto-default https'
alias e="$EDITOR"
alias g='git status'
alias l='ls -lh --color=auto'
alias rebase='export CURRENT_BRANCH=`git name-rev --name-only HEAD` && git checkout master && git pull && git checkout `echo $CURRENT_BRANCH` && git rebase master'
alias s="kitty +kitten ssh"
alias work='git add -p && git commit -m work && git push'

if [[ $uname == linux* ]]; then
  alias u='sudo apt-get update -qq && sudo apt-get -yqq upgrade && brew update -qq && brew upgrade -qq'
fi

if [[ $uname == darwin ]]; then
  alias u='brew update && brew upgrade --quiet'
fi

alias vi=vim
alias vim=nvim
alias vimdiff='vim -d'
# alias diff='difft' # Difftastic; commented out because it messes with Magit in Emacs

# General env vars
export EDITOR='vim'
export GPG_TTY=$(tty)

# zsh-fzf-history-search config
export ZSH_FZF_HISTORY_SEARCH_FZF_EXTRA_ARGS='--height 40%'

# Emacs
path+=("$HOME/.config/emacs/bin")
alias e='emacsclient --no-wait'


# Homebrew
export HOMEBREW_NO_ENV_HINTS=1
if [[ $uname == linux* ]]; then
  path+=($HOME/.linuxbrew/bin)
  path+=(/home/linuxbrew/.linuxbrew/bin)
else
  path=('/opt/homebrew/bin' $path)
fi

# Go
export GOPATH=~/go
path+=($GOPATH/bin)

# Node
eval "$(nodenv init -)"

# Python
export PYENV_ROOT="$HOME/.pyenv"
eval "$(pyenv init -)"
eval "$(pyenv init --path)"
# This causes slow every command to be slow to return when running some
# antiviruses e.g. on work machines. Second line (be slow on cd) is a workaround
# but still not great from
# https://github.com/pyenv/pyenv-virtualenv/issues/259#issuecomment-1007432346
# eval "$(pyenv virtualenv-init -)" 
# eval "$(pyenv virtualenv-init - | sed s/precmd/precwd/g)"

# Ruby
path+=("$HOME/.rbenv/shims")
eval "$(rbenv init -)"

# fun things at shell boot
fortune ~/.config/fortune | cowsay -n -f small
source ~/.profile

# direnv
eval "$(direnv hook zsh)"

# Starship
eval "$(starship init zsh)"
